# 🔥 Firebase Cloud Functions Project - Complete Setup & Run Guide

## 📋 Project Overview
This is a Flutter mobile app with Firebase Cloud Functions backend using Python runtime.
- **Frontend**: Flutter mobile app (`final_cross/`)
- **Backend**: Firebase Cloud Functions with Python (`functions/`)
- **Database**: Firestore
- **Authentication**: Firebase Auth

---

## 🛠️ Prerequisites & Installation

### 1. Required Software
- **Node.js** (v16+): https://nodejs.org/
- **Python** (3.11): https://python.org/downloads/
- **Flutter SDK**: https://docs.flutter.dev/get-started/install
- **Git**: https://git-scm.com/

### 2. Install Firebase CLI
```bash
# Install Firebase CLI globally
npm install -g firebase-tools

# Verify installation
firebase --version

# Login to Firebase
firebase login

# List your Firebase projects
firebase projects:list
```

### 3. Install Python Dependencies (Cloud Functions)
```bash
cd functions
pip install -r requirements.txt
```

### 4. Install Flutter Dependencies
```bash
cd final_cross
flutter pub get
```

---

## 🚀 How to Run the Complete Project

### Option 1: Local Development (Recommended)

#### Step 1: Start Firebase Emulators
```bash
# From project root directory
cd d:\Final_Cross

# Start Cloud Functions emulator
firebase emulators:start --only functions

# Emulator will run on:
# - Functions: http://127.0.0.1:5001/elearning-5ac35/us-central1/api
# - Emulator UI: http://127.0.0.1:4000
```

#### Step 2: Run Flutter App
```bash
# Open new terminal
cd d:\Final_Cross\final_cross

# Run on Android emulator/device
flutter run

# Or run on specific device
flutter devices
flutter run -d <device-id>

# Or run on Chrome (web)
flutter run -d chrome
```

### Option 2: Production Deployment

#### Step 1: Deploy Cloud Functions
```bash
# From project root
firebase deploy --only functions

# Your API will be available at:
# https://us-central1-elearning-5ac35.cloudfunctions.net/api
```

#### Step 2: Build Flutter App for Production
```bash
cd final_cross

# Build for Android
flutter build apk --release

# Build for iOS (Mac only)
flutter build ios --release

# Build for Web
flutter build web
```

---

## 🔧 Project Configuration

### Firebase Configuration Files
- **`firebase.json`**: Firebase project configuration
- **`functions/config/firebase-service-account.json`**: Service account credentials
- **`final_cross/lib/firebase_options.dart`**: Flutter Firebase config
- **`final_cross/android/app/google-services.json`**: Android Firebase config

### API Configuration
- **Local Development**: `http://127.0.0.1:5001/elearning-5ac35/us-central1/api`
- **Production**: `https://us-central1-elearning-5ac35.cloudfunctions.net/api`

---

## 📱 Testing the Application

### 1. Test Cloud Functions API
```bash
# Test health endpoint
curl http://127.0.0.1:5001/elearning-5ac35/us-central1/api/health

# Test courses endpoint
curl http://127.0.0.1:5001/elearning-5ac35/us-central1/api/courses
```

### 2. Test Flutter App Features
- **Authentication**: Register/Login functionality
- **Courses**: View course list and details
- **Profile**: User profile management
- **Navigation**: Test all app screens

---

## 🐛 Troubleshooting

### Common Issues & Solutions

#### Firebase Emulator Issues
```bash
# If port 5001 is busy
firebase emulators:start --only functions --port 5002

# Clear emulator data
firebase emulators:start --only functions --import=./emulator-data --export-on-exit=./emulator-data
```

#### Flutter Issues
```bash
# Clean Flutter project
flutter clean
flutter pub get

# Reset Flutter
flutter doctor
flutter doctor --android-licenses
```

#### Python Dependencies Issues
```bash
cd functions

# Create virtual environment
python -m venv venv

# Activate virtual environment
# Windows:
venv\Scripts\activate
# Mac/Linux:
source venv/bin/activate

# Install dependencies
pip install -r requirements.txt
```

#### CORS Issues
- Ensure Firebase Functions CORS is configured in `main.py`
- Check `api_config.dart` for correct URLs
- Verify emulator is running on correct port

---

## 📁 Project Structure

```
Final_Cross/
├── firebase.json                 # Firebase configuration
├── functions/                    # Cloud Functions backend
│   ├── main.py                  # Main Cloud Function
│   ├── requirements.txt         # Python dependencies
│   ├── routes/                  # API routes
│   ├── models/                  # Data models
│   ├── controllers/             # Business logic
│   └── config/                  # Firebase credentials
├── final_cross/                 # Flutter mobile app
│   ├── lib/                     # Dart source code
│   ├── android/                 # Android configuration
│   ├── ios/                     # iOS configuration
│   └── pubspec.yaml            # Flutter dependencies
└── cloud_function.txt          # Documentation
```

---

## 🔄 Development Workflow

### Daily Development Process
1. **Start Emulators**: `firebase emulators:start --only functions`
2. **Run Flutter App**: `flutter run`
3. **Make Changes**: Edit code in VS Code
4. **Hot Reload**: Flutter automatically reloads changes
5. **Test API**: Use emulator UI or curl commands
6. **Deploy**: `firebase deploy --only functions` when ready

### Adding New Features
1. **Backend Changes**: Edit files in `functions/`
2. **Frontend Changes**: Edit files in `final_cross/lib/`
3. **Test Locally**: Use Firebase emulators
4. **Deploy**: Push to production when tested

---

## 🎯 Key Endpoints

### Authentication
- **POST** `/auth/register` - User registration
- **POST** `/auth/login` - User login
- **GET** `/auth/profile` - Get user profile
- **PUT** `/auth/profile` - Update user profile

### Courses
- **GET** `/courses` - Get all published courses
- **GET** `/courses/{id}` - Get specific course

### Health Check
- **GET** `/` - API status
- **GET** `/health` - Health check

---

## 📝 Environment Variables

### Firebase Project Configuration
```bash
# Project ID: elearning-5ac35
# Region: us-central1
# Runtime: python311
```

### Flutter Debug Configuration
```dart
// Local emulator URLs are automatically configured in api_config.dart
// Production URLs are used when building for release
```

---

## 🚀 Deployment Commands Quick Reference

```bash
# Local Development
firebase emulators:start --only functions
flutter run

# Production Deployment
firebase deploy --only functions
flutter build apk --release

# Testing
curl http://127.0.0.1:5001/elearning-5ac35/us-central1/api/health
flutter test
```

---

## 📞 Support & Resources

- **Firebase Documentation**: https://firebase.google.com/docs/functions
- **Flutter Documentation**: https://docs.flutter.dev/
- **Project Repository**: https://github.com/KhangTranManh/Final_Cross

---

*Last Updated: September 30, 2025*
*Project: Final_Cross - Flutter App with Firebase Cloud Functions Backend*